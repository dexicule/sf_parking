(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> validate_and_insert() takes exactly 1 argument (2 given)"
p3
sS'layer'
p4
S'/Users/hanli/SideProj/Server/web2py/applications/sf_parking/controllers/parking.py'
p5
sS'code'
p6
S'import json\nimport os\n\n\ndef index():\n\treturn dict(message="hello from parkisssng.py")\n\n\ndef populate_db():\n\tdata_path = os.path.join(request.folder, \'static/resource\', \'bike_data.json\') \n\tdata_file = open(data_path, \'r\')\n\tdata_json = json.load(data_file)\n\tentries = data_json["data"]\n\tfor entry in entries:\n\t\tresult = dict(bike_parking = db.bike_parking.validate_and_insert(entry))\n\treturn {"status": "success"}\n\n\nresponse._vars=response._caller(populate_db)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/hanli/SideProj/Server/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/Users/hanli/SideProj/Server/web2py/applications/sf_parking/controllers/parking.py", line 19, in <module>\n  File "/Users/hanli/SideProj/Server/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/hanli/SideProj/Server/web2py/applications/sf_parking/controllers/parking.py", line 15, in populate_db\n    result = dict(bike_parking = db.bike_parking.validate_and_insert(entry))\nTypeError: validate_and_insert() takes exactly 1 argument (2 given)\n'
p11
s.