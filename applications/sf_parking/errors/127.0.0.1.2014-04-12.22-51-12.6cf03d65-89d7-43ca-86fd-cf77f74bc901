(dp1
S'output'
p2
S"<class 'sqlite3.OperationalError'> database is locked"
p3
sS'layer'
p4
S'/Users/hanli/SideProj/Server/web2py/applications/sf_parking/controllers/parking.py'
p5
sS'code'
p6
S'import json\nimport os\n\n\ndef index():\n\treturn dict(message="hello from parkisssng.py")\n\n\ndef populate_db():\n\tdata_path = os.path.join(request.folder, \'static/resource\', \'bike_data.json\') \n\tdata_file = open(data_path, \'r\')\n\tdata_json = json.load(data_file)\n\t\n\t# Load column meta info\n\t# create column name - index map\n\tmeta_column = data_json["meta"]["view"]["columns"]\n\tdict_column = dict()\n\tfor index, column in enumerate(meta_column):\n\t\tdict_column[column["name"]] = index\n\t\n\tentries = data_json["data"]\n\tfor entry in entries:\n\t\tinsert_entry = {\n\t\t\t"LOC": entry[dict_column["LOCATION"]],\n\t\t\t#"ADDRESS": entry[dict_column["ADDRESS"]],\n\t\t\t#"BIKE_PARKING": entry[dict_column["BIKE_PARKING"]],\n\t\t\t#"PLACEMENT": entry[dict_column["PLACEMENT"]],\n\t\t\t#"RACKS": entry[dict_column["RACKS"]],\n\t\t\t#"SPACES": entry[dict_column["SPACES"]],\n\t\t\t#"YR_INSTALLED": entry[dict_column["YR_INSTALLED"]],\n\t\t\t"COORDINATES": [entry[dict_column["COORDINATES"]][1], entry[dict_column["COORDINATES"]][2]]\n\t\t}\n\t\tresult = db.bike_parking.validate_and_insert(**insert_entry)\n\treturn {"status": "success"}\n\n\nresponse._vars=response._caller(populate_db)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/hanli/SideProj/Server/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/Users/hanli/SideProj/Server/web2py/applications/sf_parking/controllers/parking.py", line 37, in <module>\n  File "/Users/hanli/SideProj/Server/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/hanli/SideProj/Server/web2py/applications/sf_parking/controllers/parking.py", line 33, in populate_db\n    result = db.bike_parking.validate_and_insert(**insert_entry)\n  File "/Users/hanli/SideProj/Server/web2py/gluon/dal.py", line 9131, in validate_and_insert\n    response.id = self.insert(**new_fields)\n  File "/Users/hanli/SideProj/Server/web2py/gluon/dal.py", line 9114, in insert\n    ret =  self._db._adapter.insert(self, self._listify(fields))\n  File "/Users/hanli/SideProj/Server/web2py/gluon/dal.py", line 1360, in insert\n    raise e\nOperationalError: database is locked\n'
p11
s.